---
- name: Create and run Netmaker container
  docker_container:
    name: "netmaker"
    image: "gravitl/netmaker:latest"
    capabilities:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.src_valid_mark: 1
      net.ipv6.conf.all.disable_ipv6: 0
      net.ipv6.conf.all.forwarding: 1
    env:
      SERVER_NAME: "vpn-broker.{{ domain }}"
      SERVER_HOST: "{{ ip }}"
      SERVER_HTTP_HOST: "vpn.{{ domain }}"
      SERVER_API_CONN_STRING: "vpn.{{ domain }}:443"
      API_PORT: "8081"
      DNS_MODE: "off"
      MASTER_KEY: "REPLACE_MASTER_KEY"
      CORS_ALLOWED_ORIGIN: "*"
      DISPLAY_KEYS: "on"
      DATABASE: "sqlite"
      NODE_ID: "netmaker-server-1"
      MQ_HOST: "172.19.0.5"
      MQ_SERVER_PORT: "1883"
      MQ_PORT: "443"
      HOST_NETWORK: "off"
      VERBOSITY: "1"
      # PORT_FORWARD_SERVICES: "dns"
    restart: true
    networks:
      - name: docker
    expose:
      - "8081"
    ports:
      - "51821-51830:51821-51830/udp"
    volumes:
      - "{{ docker_dir }}/netmaker/dnsconfig:/root/config/dnsconfig"
      - "{{ docker_dir }}/netmaker/data:/root/data"
      - "{{ docker_dir }}/netmaker/shared_certs:/etc/netmaker"
    labels:
      traefik.http.routers.netmaker-vpn.entrypoints: https
      traefik.http.routers.netmaker-vpn.tls: "true"
      traefik.http.routers.netmaker-vpn.rule: Host(`vpn.{{ domain }}`)
      traefik.http.routers.netmaker-vpn.service: netmaker-vpn
      traefik.http.services.netmaker-vpn.loadbalancer.server.port: "8081"
    restart_policy: unless-stopped

- name: Create and run Netmaker-UI container
  docker_container:
    name: "netmaker-ui"
    image: "gravitl/netmaker-ui:latest"
    links:
      - netmaker:api
    restart: true
    expose:
      - "80"
      - "443"
    networks:
      - name: docker
    env:
      BACKEND_URL: "https://vpn.{{ domain }}"
    labels:
      traefik.http.routers.netmaker.entrypoints: https
      traefik.http.routers.netmaker.tls: "true"
      traefik.http.routers.netmaker.rule: "Host(`netmaker.{{ domain }}`)"
      traefik.http.routers.netmaker.service: netmaker
      # traefik.http.services.netmaker.loadbalancer.server.scheme: https
      traefik.http.services.netmaker.loadbalancer.server.port: "80"
      traefik.http.routers.netmaker.middlewares: netmaker,auth
      traefik.http.middlewares.netmaker.headers.customResponseHeaders.Server:

- name: Create the mosquitto config folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/mosquitto/config"
    recurse: true
    owner: "{{ username }}"
    group: 101
    mode: 0770

- name: Copy the mosquitto.conf file
  ansible.builtin.template:
    src: mosquitto.conf.j2
    dest: "{{ docker_dir }}/mosquitto/config/mosquitto.conf"
    group: 101
    mode: 0770


- name: Create and run Mosquitto container
  docker_container:
    name: "mosquitto"
    image: "eclipse-mosquitto:2.0.11-openssl"
    restart: true
    expose:
      - "8883"
    networks:
      - name: docker
    volumes:
      - "{{ docker_dir }}/mosquitto:/mosquitto"
      - "{{ docker_dir }}/netmaker/shared_certs:/mosquitto/certs"
    labels:
      traefik.tcp.routers.mqtts.rule: HostSNI(`vpn-broker.{{ domain }}`)
      traefik.tcp.routers.mqtts.tls.passthrough: "true"
      traefik.tcp.services.mqtts.loadbalancer.server.port: "8883"
      traefik.tcp.routers.mqtts.service: mqtts
      traefik.tcp.routers.mqtts.entrypoints: https
    restart_policy: unless-stopped
