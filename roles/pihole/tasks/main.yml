---
- name: Disable Stub listener in systemd-resolved
  when: ansible_distribution == 'Ubuntu'
  block:
    - name: Uncomment line in resolved.conf
      ansible.builtin.lineinfile:
        dest: /etc/systemd/resolved.conf
        regexp: "#DNSStubListener=yes"
        line: "DNSStubListener=no"
    - name: Change /etc/resolv.conf symlink to /run/systemd/resolve/resolv.conf
      ansible.builtin.file:
        src: /etc/resolv.conf
        dest: /run/systemd/resolve/resolv.conf
        state: link
        force: true
    - name: Restart systemd-resolved service
      ansible.builtin.service:
        name: systemd-resolved
        state: restarted

- name: Create the pihole folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/pihole/pihole"
    owner: "{{ ansible_user }}"
    recurse: true

- name: Create and run Pihole container
  community.docker.docker_container:
    image: "pihole/pihole:latest"
    name: "pihole"
    pull: "{{ pull_images }}"
    env:
      "PUID": "1000"
      "PGID": "1000"
      "UMASK": "002"
      "TZ": "America/Sao_Paulo"
      "FTLCONF_dns_listeningMode": "all"
      "FTLCONF_dns_upstreams": "1.1.1.1; 8.8.8.8"
      "FTLCONF_webserver_api_password": "password"
    volumes:
      - "{{ docker_dir }}/pihole/pihole:/etc/pihole"
    dns_servers:
      - "1.1.1.1"
    networks:
      - name: docker
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    capabilities:
      - SYS_NICE
    labels:
      traefik.http.routers.pihole.rule: Host(`pihole.{{ domain_name }}`)
      traefik.http.routers.pihole.entrypoints: https
      traefik.http.routers.pihole.tls: "true"
      traefik.http.services.pihole.loadbalancer.server.port: "80"

      homepage.name: "Pi-Hole"
      homepage.group: "Networks Tools"
      homepage.href: "http://pihole.{{ domain_name }}/admin"
      homepage.description: "DNS server with Ad-Blocking capabilities"
      homepage.icon: "pi-hole.png"
      homepage.widget.type: pihole
      homepage.widget.url: "http://pihole"
      homepage.widget.version: "6"
      homepage.ping: "http://pihole"
    restart_policy: unless-stopped

- name: Add CNAME entry for pihole
  ansible.builtin.import_tasks: add_cname_record.yml
  vars:
    subdomain: pihole
